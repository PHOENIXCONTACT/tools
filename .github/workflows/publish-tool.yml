name: Publish

on:
  workflow_call:
    inputs:
      dotnet_sdk_version:
        required: true
        type: string
      REPOSITORY_NAME:
        required: true
        type: string
      MORYX_PACKAGE_TARGET_DEV:
        required: true
        type: string
      MORYX_PACKAGE_TARGET_V3_DEV:
        required: true
        type: string
      MORYX_PACKAGE_TARGET_FUTURE:
        required: true
        type: string
      MORYX_PACKAGE_TARGET_V3_FUTURE:
        required: true
        type: string
      MORYX_PACKAGE_TARGET_RELEASE:
        required: true
        type: string
      MORYX_PACKAGE_TARGET_V3_RELEASE:
        required: true
        type: string
    secrets:
      MYGET_TOKEN:
        required: true
      NUGET_TOKEN:
        required: true

jobs:
  Publish:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ inputs.dotnet_sdk_version }}
          
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{inputs.REPOSITORY_NAME}}-packages
          path: artifacts/packages/

      # Use if dev branch 
      - name: Publish on MyGet-CI
        if: ${{ github.ref == 'refs/heads/dev' || github.base_ref == 'dev' }} # dev branche is published to myget moryx
        env:
          MORYX_NUGET_APIKEY: ${{secrets.MYGET_TOKEN}}
          MORYX_PACKAGE_TARGET: ${{ inputs.MORYX_PACKAGE_TARGET_DEV }}
          MORYX_PACKAGE_TARGET_V3: ${{ inputs.MORYX_PACKAGE_TARGET_V3_DEV }}
        run: dotnet nuget push "artifacts/packages/" --api-key $MORYX_NUGET_APIKEY --source $MORYX_PACKAGE_TARGET --skip-duplicate --symbol-api-key $MORYX_NUGET_APIKEY --symbol-source $MORYX_PACKAGE_TARGET_V3
    
      # Use if future branch 
      - name: Publish on MyGet-CI
        if: ${{ github.ref == 'refs/heads/future' }} # Future branch is published to myget moryx-future
        env:
          MORYX_NUGET_APIKEY: ${{secrets.MYGET_TOKEN}}
          MORYX_PACKAGE_TARGET: ${{ inputs.MORYX_PACKAGE_TARGET_FUTURE }}
          MORYX_PACKAGE_TARGET_V3: ${{ inputs.MORYX_PACKAGE_TARGET_V3_FUTURE }}
        run: dotnet nuget push "artifacts/packages/" --api-key $MORYX_NUGET_APIKEY --source $MORYX_PACKAGE_TARGET --skip-duplicate --symbol-api-key $MORYX_NUGET_APIKEY --symbol-source $MORYX_PACKAGE_TARGET_V3
    
       # Use if tag
      - name: Publish on NuGet
        if: ${{ startsWith(github.ref, 'refs/tags/v') }} # Version Tags are published to nuget
        env:
          MORYX_NUGET_APIKEY: ${{secrets.NUGET_TOKEN}}
          MORYX_PACKAGE_TARGET: ${{ inputs.MORYX_PACKAGE_TARGET_RELEASE }}
          MORYX_PACKAGE_TARGET_V3: ${{ inputs.MORYX_PACKAGE_TARGET_V3_RELEASE }}
        run: dotnet nuget push artifacts/packages/*.nupkg --api-key $MORYX_NUGET_APIKEY --source $MORYX_PACKAGE_TARGET --skip-duplicate
